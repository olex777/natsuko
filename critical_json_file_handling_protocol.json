{
  "name": "critical_json_file_handling_protocol",
  "version": "1.0",
  "description": "Алгоритм безпечної роботи з великими JSON-файлами: без галюцинацій, із гарантією достовірності",
  "context": {
    "applies_to": [
      "voin_dushu",
      "audio_learning",
      "fairy_tale_learning",
      "future_structured_projects"
    ],
    "exceptions": [
      "Файли, які завантажуються для відновлення пам'яті (наприклад voin_dushu_final_combined.json) опрацьовуються через глибинний аналіз і прошивку, а не через пряме збереження копії"
    ]
  },
  "steps": [
    {
      "step": 1,
      "action": "Прийом JSON-файлу",
      "details": "Файл зчитується як сирий текст (одним блоком), без парсингу у Python-обʼєкти"
    },
    {
      "step": 2,
      "action": "Попередній вивід",
      "details": "Вивід вмісту на екран або у вигляді таблиці — для перевірки користувачем"
    },
    {
      "step": 3,
      "action": "Підтвердження користувача",
      "details": "Користувач затверджує, що JSON є точним і достовірним (заголовки, тексти, дати)"
    },
    {
      "step": 4,
      "action": "Парсинг JSON",
      "details": "Файл парситься у Python лише після підтвердження користувача"
    },
    {
      "step": 5,
      "action": "Формування вихідного файлу",
      "details": "Або формується файл для завантаження (.json), або команда `cat > ... <<EOF` (тільки з перевіреного вмісту)"
    },
    {
      "step": 6,
      "action": "Контроль генерації",
      "details": "Якщо обсяг великий — ділення лише по завершених JSON-обʼєктах. Жодного шаблонного автодоповнення"
    }
  ],
  "notes": [
    "Усі вставки у форматі `cat <<EOF` дозволені тільки після перевірки вмісту у відкритому вигляді",
    "Файли, що зберігаються в памʼяті, маркуються як верифіковані лише після цього протоколу"
  ]
}